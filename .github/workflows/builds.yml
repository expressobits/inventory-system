name: Build GDExtension
on:
  workflow_dispatch:
      inputs:
        inventory_tag:
          description: 'Tag for the inventory build (optional)'
          required: false
          type: string

env:
  LIBNAME: inventory-system

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # A build is made for every possible combination of parameters
        # You can add or remove entries from the arrays of each parameter to custimize which builds you want to run
        # See https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/running-variations-of-jobs-in-a-workflow
        target:
          [
            { platform: linux, arch: x86_64, os: ubuntu-22.04 },
            { platform: windows, arch: x86_64, os: windows-latest },
            { platform: windows, arch: x86_32, os: windows-latest },
            { platform: macos, arch: universal, os: macos-latest },
            { platform: android, arch: arm64, os: ubuntu-22.04 },
            { platform: android, arch: arm32, os: ubuntu-22.04 },
            { platform: android, arch: x86_64, os: ubuntu-22.04 },
            { platform: android, arch: x86_32, os: ubuntu-22.04 },
            { platform: ios, arch: arm64, os: macos-latest },
            { platform: web, arch: wasm32, os: ubuntu-22.04 }
          ]
        target-type: [template_debug, editor, template_release]
        float-precision: [single, double]
        # include: # Also build a release version for these specific targets. Remove if you add template_release above.
        #   - target: { platform: linux, arch: x86_64, os: ubuntu-22.04 }
        #     target-type: template_release
        #     float-precision: single

        #   - target: { platform: linux, arch: x86_64, os: ubuntu-22.04 }
        #     target-type: template_release
        #     float-precision: double

    runs-on: ${{ matrix.target.os }}
    steps:
      # Clone this repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      # Lint
      #- name: Setup clang-format
      #  shell: bash
      #  run: |
      #    python -m pip install clang-format
      #- name: Run clang-format
      #  shell: bash
      #  run: |
      #    clang-format src/** --dry-run --Werror

      # Setup dependencies
      - name: Setup godot-cpp
        uses: ./godot-cpp/.github/actions/setup-godot-cpp
        with:
          platform: ${{ matrix.target.platform }}
          em-version: 3.1.62

      # Build GDExtension (with caches)

      - name: Restore .scons_cache
        uses: ./godot-cpp/.github/actions/godot-cache-restore
        with:
          scons-cache: ${{ github.workspace }}/.scons-cache/
          cache-name: ${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.float-precision }}_${{ matrix.target-type }}

      - name: Build GDExtension Debug Build
        shell: sh
        env:
          SCONS_CACHE: ${{ github.workspace }}/.scons-cache/
        run: |
          scons target=${{ matrix.target-type }} platform=${{ matrix.target.platform }} arch=${{ matrix.target.arch }} precision=${{ matrix.float-precision }}

      - name: Save .scons_cache
        uses: ./godot-cpp/.github/actions/godot-cache-save
        with:
          scons-cache: ${{ github.workspace }}/.scons-cache/
          cache-name: ${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.float-precision }}_${{ matrix.target-type }}

      # Clean up compilation files
      - name: Windows - Delete compilation files
        if: ${{ matrix.target.platform == 'windows' }}
        shell: pwsh
        run: |
          Get-ChildItem -Path bin -Recurse -Include *.exp,*.lib,*.pdb | Remove-Item -Force

      # Upload the build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: inventory-system-${{ matrix.target.platform }}-${{ matrix.target.arch }}-${{ matrix.float-precision }}-${{ matrix.target-type }}
          path: |
            ${{ github.workspace }}/bin/**

  # Merges all the build artifacts together into a single godot-cpp-template artifact.
  # If you comment out this step, all the builds will be uploaded individually.
  merge:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: inventory-system
          pattern: inventory-system-*
          delete-merged: true

  # Run tests on a subset of platforms before post-build
  test:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        # Run tests on key platforms to validate functionality
        target:
          - { platform: linux, arch: x86_64, os: ubuntu-22.04 }
          - { platform: windows, arch: x86_64, os: windows-latest }
        float-precision: [single]
    uses: ./.github/workflows/test.yml
    with:
      platform: ${{ matrix.target.platform }}
      arch: ${{ matrix.target.arch }}
      os: ${{ matrix.target.os }}
      float-precision: ${{ matrix.float-precision }}

  post-build:
    needs: [merge, test]
    uses: ./.github/workflows/post-build.yml
    with:
      artifact-name: inventory-system